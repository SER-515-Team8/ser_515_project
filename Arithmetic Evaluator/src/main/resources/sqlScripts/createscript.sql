#show databases;#use test;#show tables;# Create users TableCREATE TABLE `users` (	`user_id` INT(40) NOT NULL AUTO_INCREMENT,	`email_id` VARCHAR(80) NOT NULL,	`password` VARCHAR(80) NOT NULL,	`first_name` VARCHAR(80),	`last_name` VARCHAR(80),	UNIQUE KEY `email_id_Index` (`email_id`) USING BTREE,	PRIMARY KEY (`user_id`));# Create institutions TableCREATE TABLE `institutions` (	`institution_id` INT(40) NOT NULL AUTO_INCREMENT,	`institution_name` VARCHAR(80) NOT NULL,	PRIMARY KEY (`institution_id`));# Create roles TableCREATE TABLE `roles` (	`role_id` INT(40) NOT NULL AUTO_INCREMENT,	`role_name` VARCHAR(80) NOT NULL,	PRIMARY KEY (`role_id`));# Create grades TableCREATE TABLE `grades` (	`grade_id` INT(40) NOT NULL AUTO_INCREMENT,	`grade_name` VARCHAR(20) NOT NULL,	PRIMARY KEY (`grade_id`));# Create subjects TableCREATE TABLE `subjects` (	`subject_id` INT(40) NOT NULL AUTO_INCREMENT,	`subject_name` VARCHAR(80) NOT NULL,	PRIMARY KEY (`subject_id`));# Create user_to_role TableCREATE TABLE `user_to_role` (	`user_id` INT(40),	`role_id` INT(40),	PRIMARY KEY (`user_id`,`role_id`),	FOREIGN KEY (user_id)      		REFERENCES users (user_id)      		ON UPDATE CASCADE ON DELETE CASCADE,   	FOREIGN KEY (role_id)      		REFERENCES roles(role_id)		ON UPDATE CASCADE ON DELETE CASCADE);# Create user_to_institution TableCREATE TABLE `user_to_institution` (	`user_id` INT(40),	`institution_id` INT(40),	PRIMARY KEY (`user_id`,`institution_id`),	FOREIGN KEY (user_id)      		REFERENCES users (user_id)      		ON UPDATE CASCADE ON DELETE CASCADE,   	FOREIGN KEY (institution_id)      		REFERENCES institutions(institution_id)		ON UPDATE CASCADE ON DELETE CASCADE);# Create student_to_grade TableCREATE TABLE `student_to_grade` (	`user_id` INT(40),	`grade_id` INT(40),	PRIMARY KEY (`user_id`,`grade_id`),	FOREIGN KEY (user_id)      		REFERENCES users (user_id)      		ON UPDATE CASCADE ON DELETE CASCADE,   	FOREIGN KEY (grade_id)      		REFERENCES grades(grade_id)		ON UPDATE CASCADE ON DELETE CASCADE);# Create syllabus TableCREATE TABLE `syllabus` (	`grade_id` INT(40),	`subject_id` INT(40),	PRIMARY KEY (`grade_id`,`subject_id`),	FOREIGN KEY (grade_id)      		REFERENCES grades (grade_id)      		ON UPDATE CASCADE ON DELETE CASCADE,   	FOREIGN KEY (subject_id)      		REFERENCES subjects(subject_id)		ON UPDATE CASCADE ON DELETE CASCADE);# Create tests TableCREATE TABLE `tests` (  `test_id` int(40) NOT NULL AUTO_INCREMENT,  `test_name` varchar(40) COLLATE utf8mb4_general_ci NOT NULL,  `grade_id` int(40) DEFAULT NULL,  `created_by_user_id` int(40) DEFAULT NULL,  PRIMARY KEY (`test_id`),  KEY `grade_id` (`grade_id`),  KEY `created_by_user_id` (`created_by_user_id`),  CONSTRAINT `tests_ibfk_1` FOREIGN KEY (`grade_id`) REFERENCES `grades` (`grade_id`) ON DELETE CASCADE ON UPDATE CASCADE,  CONSTRAINT `tests_ibfk_2` FOREIGN KEY (`created_by_user_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE)#Create test_questions TableCREATE TABLE `test_questions` (  `question_id` int(18) NOT NULL AUTO_INCREMENT,  `test_id` int(40) NOT NULL,  `question` varchar(400) COLLATE utf8mb4_general_ci DEFAULT NULL,  `option1` varchar(200) COLLATE utf8mb4_general_ci DEFAULT NULL,  `option2` varchar(200) COLLATE utf8mb4_general_ci DEFAULT NULL,  `option3` varchar(200) COLLATE utf8mb4_general_ci DEFAULT NULL,  `option4` varchar(200) COLLATE utf8mb4_general_ci DEFAULT NULL,  `answer` int(11) DEFAULT NULL,  PRIMARY KEY (`question_id`),  KEY `test_id` (`test_id`),  CONSTRAINT `test_questions_ibfk_1` FOREIGN KEY (`test_id`) REFERENCES `tests` (`test_id`) ON DELETE CASCADE ON UPDATE CASCADE)